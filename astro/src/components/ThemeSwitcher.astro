<div class="theme-switcher">
  <button class="theme-btn indicator"/>
</div>

<style>
  .theme-switcher {
    display: flex;
    flex: 1 1 100%;
    align-items: flex-end;
    justify-content: flex-end;
    position: relative;
  }

  .indicator-container {
    width: 80px;
    height: 50px;
    background-color: var(--indicator-bg-color);
    border-radius: 25px;
    transition: transform 0.3s ease-in-out;
  }

  .theme-btn {
    width: 4rem;
    /*
    height: 50px; */
    border: none;
    font-size: 2rem;
    cursor: pointer;
    transition: transform 0.3s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    background-color: var(--indicator-bg-color);

    &:hover {
      opacity: .9;
    }
  }
</style>

<script>
  // The client-side JavaScript code

  interface Theme {
    name: string;
    className: string;
    bgColor: string;
    textColor: string;
    indicatorBgColor: string;
    indicatorTextColor: string;
    icon: string;
  }

  const themes = [
  { name: 'wizard', className: 'light', bgColor: '#f5f5f5', textColor: '#333', indicatorBgColor: '#007fff',indicatorTextColor: '#f5f5f5', icon: 'üßô‚Äç‚ôÇÔ∏è' },
  { name: 'unicorn', className: 'colorful', bgColor: 'linear-gradient(to bottom right, #FF69B4, #8B00FF)', textColor: '#140081', indicatorBgColor: '#8B00FF', indicatorTextColor: '#FFFFFF', icon: 'ü¶Ñ' },
  { name: 'ninja', className: 'dark', bgColor: '#333', textColor: '#f5f5f5', indicatorBgColor: '#f5f5f5', indicatorTextColor: '#333', icon: 'ü•∑' },
  ];

  let currentTheme = themes[0];
  let currentPosition = 0;

  const themeButton = document.querySelector<HTMLElement>('.theme-btn');
  if (themeButton) {
    themeButton.addEventListener('click', (e: MouseEvent) => {
      currentPosition = (currentPosition + 1) % themes.length;
      currentTheme = themes[currentPosition];
      setTheme(currentTheme);
      themeButton.innerHTML = currentTheme.icon;
    });
  }

  function setTheme(newTheme: Theme): void {
    currentTheme = newTheme;
    document.documentElement.setAttribute('data-theme', newTheme.className);
    if (typeof newTheme.bgColor === 'string' && newTheme.bgColor.includes('gradient')) {
    document.documentElement.style.background = newTheme.bgColor;
    document.documentElement.style.setProperty('--bg-color', '');
  } else {
    document.documentElement.style.setProperty('--bg-color', newTheme.bgColor);
    document.documentElement.style.background = '';
  }
    document.documentElement.style.setProperty('--text-color', newTheme.textColor);
    document.documentElement.style.setProperty('--indicator-bg-color', newTheme.indicatorBgColor);
    document.documentElement.style.setProperty('--indicator-text-color', newTheme.indicatorTextColor);
    if (typeof window !== 'undefined') {
      localStorage.setItem('theme', newTheme.icon);
    }
  }

  // Check if a theme is saved in localStorage
  let savedTheme: string | null = null;
  if (typeof window !== 'undefined') {
    savedTheme = localStorage.getItem('theme');
  }
  if (savedTheme && themes.some((t) => t.icon === savedTheme)) {
    const theme = themes.find((t) => t.icon === savedTheme)!;
    document.documentElement.setAttribute('data-theme', theme.className);
    if (typeof theme.bgColor === 'string' && theme.bgColor.includes('gradient')) {
    document.documentElement.style.background = theme.bgColor;
    document.documentElement.style.setProperty('--bg-color', '');
  } else {
    document.documentElement.style.setProperty('--bg-color', theme.bgColor);
    document.documentElement.style.background = '';
  }
    document.documentElement.style.setProperty('--text-color', theme.textColor);
    document.documentElement.style.setProperty('--indicator-bg-color', theme.indicatorBgColor);
    document.documentElement.style.setProperty('--indicator-text-color', theme.indicatorTextColor);
    currentTheme = theme;
    currentPosition = themes.indexOf(theme);
    const themeButton = document.querySelector('.theme-btn');
    if (themeButton !== null) {
      themeButton.innerHTML = currentTheme.icon;
    }
  }
</script>